// adc_modular_dual_adc_0.v

// This file was auto-generated from altera_modular_adc_dual_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 17.1 590

`timescale 1 ps / 1 ps
module adc_modular_dual_adc_0 (
		input  wire        clock_clk,                //          clock.clk
		input  wire        reset_sink_reset_n,       //     reset_sink.reset_n
		input  wire        adc_pll_clock_clk,        //  adc_pll_clock.clk
		input  wire        adc_pll_locked_export,    // adc_pll_locked.export
		input  wire        command_valid,            //        command.valid
		input  wire [4:0]  command_channel,          //               .channel
		input  wire        command_startofpacket,    //               .startofpacket
		input  wire        command_endofpacket,      //               .endofpacket
		output wire        command_ready,            //               .ready
		input  wire        command_2_valid,          //      command_2.valid
		input  wire [4:0]  command_2_channel,        //               .channel
		input  wire        command_2_startofpacket,  //               .startofpacket
		input  wire        command_2_endofpacket,    //               .endofpacket
		output wire        command_2_ready,          //               .ready
		output wire        response_valid,           //       response.valid
		output wire [4:0]  response_channel,         //               .channel
		output wire [11:0] response_data,            //               .data
		output wire        response_startofpacket,   //               .startofpacket
		output wire        response_endofpacket,     //               .endofpacket
		output wire        response_2_valid,         //     response_2.valid
		output wire [4:0]  response_2_channel,       //               .channel
		output wire [11:0] response_2_data,          //               .data
		output wire        response_2_startofpacket, //               .startofpacket
		output wire        response_2_endofpacket    //               .endofpacket
	);

	wire    conduit_splitter_internal_conduit_out_1_internal_conduit_in; // conduit_splitter_internal:clk_in_pll_locked_out_1 -> control_internal:clk_in_pll_locked
	wire    conduit_splitter_internal_conduit_out_2_internal_conduit_in; // conduit_splitter_internal:clk_in_pll_locked_out_2 -> control_internal_2:clk_in_pll_locked
	wire    control_internal_sync_handshake_valid;                       // control_internal:sync_valid -> dual_sync_internal:sync_1_valid
	wire    control_internal_sync_handshake_ready;                       // dual_sync_internal:sync_1_ready -> control_internal:sync_ready
	wire    control_internal_2_sync_handshake_valid;                     // control_internal_2:sync_valid -> dual_sync_internal:sync_2_valid
	wire    control_internal_2_sync_handshake_ready;                     // dual_sync_internal:sync_2_ready -> control_internal_2:sync_ready

	altera_modular_adc_control #(
		.clkdiv                          (2),
		.tsclkdiv                        (1),
		.tsclksel                        (1),
		.hard_pwd                        (0),
		.prescalar                       (0),
		.refsel                          (0),
		.device_partname_fivechar_prefix ("10M50"),
		.is_this_first_or_second_adc     (1),
		.analog_input_pin_mask           (65539),
		.dual_adc_mode                   (1),
		.enable_usr_sim                  (0),
		.reference_voltage_sim           (49648),
		.simfilename_ch0                 (""),
		.simfilename_ch1                 (""),
		.simfilename_ch2                 (""),
		.simfilename_ch3                 (""),
		.simfilename_ch4                 (""),
		.simfilename_ch5                 (""),
		.simfilename_ch6                 (""),
		.simfilename_ch7                 (""),
		.simfilename_ch8                 (""),
		.simfilename_ch9                 (""),
		.simfilename_ch10                (""),
		.simfilename_ch11                (""),
		.simfilename_ch12                (""),
		.simfilename_ch13                (""),
		.simfilename_ch14                (""),
		.simfilename_ch15                (""),
		.simfilename_ch16                ("")
	) control_internal (
		.clk               (clock_clk),                                                   //          clock.clk
		.cmd_valid         (command_valid),                                               //        command.valid
		.cmd_channel       (command_channel),                                             //               .channel
		.cmd_sop           (command_startofpacket),                                       //               .startofpacket
		.cmd_eop           (command_endofpacket),                                         //               .endofpacket
		.cmd_ready         (command_ready),                                               //               .ready
		.sync_valid        (control_internal_sync_handshake_valid),                       // sync_handshake.valid
		.sync_ready        (control_internal_sync_handshake_ready),                       //               .ready
		.rst_n             (reset_sink_reset_n),                                          //     reset_sink.reset_n
		.rsp_valid         (response_valid),                                              //       response.valid
		.rsp_channel       (response_channel),                                            //               .channel
		.rsp_data          (response_data),                                               //               .data
		.rsp_sop           (response_startofpacket),                                      //               .startofpacket
		.rsp_eop           (response_endofpacket),                                        //               .endofpacket
		.clk_in_pll_c0     (adc_pll_clock_clk),                                           //  adc_pll_clock.clk
		.clk_in_pll_locked (conduit_splitter_internal_conduit_out_1_internal_conduit_in)  //    conduit_end.internal_conduit_in
	);

	altera_modular_adc_control #(
		.clkdiv                          (2),
		.tsclkdiv                        (1),
		.tsclksel                        (1),
		.hard_pwd                        (0),
		.prescalar                       (0),
		.refsel                          (0),
		.device_partname_fivechar_prefix ("10M50"),
		.is_this_first_or_second_adc     (2),
		.analog_input_pin_mask           (0),
		.dual_adc_mode                   (1),
		.enable_usr_sim                  (0),
		.reference_voltage_sim           (49648),
		.simfilename_ch0                 (""),
		.simfilename_ch1                 (""),
		.simfilename_ch2                 (""),
		.simfilename_ch3                 (""),
		.simfilename_ch4                 (""),
		.simfilename_ch5                 (""),
		.simfilename_ch6                 (""),
		.simfilename_ch7                 (""),
		.simfilename_ch8                 (""),
		.simfilename_ch9                 (""),
		.simfilename_ch10                (""),
		.simfilename_ch11                (""),
		.simfilename_ch12                (""),
		.simfilename_ch13                (""),
		.simfilename_ch14                (""),
		.simfilename_ch15                (""),
		.simfilename_ch16                ("")
	) control_internal_2 (
		.clk               (clock_clk),                                                   //          clock.clk
		.cmd_valid         (command_2_valid),                                             //        command.valid
		.cmd_channel       (command_2_channel),                                           //               .channel
		.cmd_sop           (command_2_startofpacket),                                     //               .startofpacket
		.cmd_eop           (command_2_endofpacket),                                       //               .endofpacket
		.cmd_ready         (command_2_ready),                                             //               .ready
		.sync_valid        (control_internal_2_sync_handshake_valid),                     // sync_handshake.valid
		.sync_ready        (control_internal_2_sync_handshake_ready),                     //               .ready
		.rst_n             (reset_sink_reset_n),                                          //     reset_sink.reset_n
		.rsp_valid         (response_2_valid),                                            //       response.valid
		.rsp_channel       (response_2_channel),                                          //               .channel
		.rsp_data          (response_2_data),                                             //               .data
		.rsp_sop           (response_2_startofpacket),                                    //               .startofpacket
		.rsp_eop           (response_2_endofpacket),                                      //               .endofpacket
		.clk_in_pll_c0     (adc_pll_clock_clk),                                           //  adc_pll_clock.clk
		.clk_in_pll_locked (conduit_splitter_internal_conduit_out_2_internal_conduit_in)  //    conduit_end.internal_conduit_in
	);

	altera_modular_adc_conduit_splitter conduit_splitter_internal (
		.clk                     (clock_clk),                                                   //         clock.clk
		.rst_n                   (reset_sink_reset_n),                                          //    reset_sink.reset_n
		.clk_in_pll_locked       (adc_pll_locked_export),                                       //    conduit_in.export
		.clk_in_pll_locked_out_1 (conduit_splitter_internal_conduit_out_1_internal_conduit_in), // conduit_out_1.internal_conduit_in
		.clk_in_pll_locked_out_2 (conduit_splitter_internal_conduit_out_2_internal_conduit_in)  // conduit_out_2.internal_conduit_in
	);

	altera_modular_adc_dual_sync dual_sync_internal (
		.clk          (clock_clk),                               //            clock.clk
		.rst_n        (reset_sink_reset_n),                      //       reset_sink.reset_n
		.sync_1_valid (control_internal_sync_handshake_valid),   // sync_handshake_1.valid
		.sync_1_ready (control_internal_sync_handshake_ready),   //                 .ready
		.sync_2_valid (control_internal_2_sync_handshake_valid), // sync_handshake_2.valid
		.sync_2_ready (control_internal_2_sync_handshake_ready)  //                 .ready
	);

endmodule
